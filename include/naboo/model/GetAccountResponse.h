/**
 * NabooApi V1
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetAccountResponse.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetAccountResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetAccountResponse_H_


#include "naboo/ModelBase.h"

#include "naboo/model/Wallet.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  GetAccountResponse
    : public ModelBase
{
public:
    GetAccountResponse();
    virtual ~GetAccountResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetAccountResponse members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAccountNumber() const;
    bool accountNumberIsSet() const;
    void unsetAccount_number();

    void setAccountNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getBalance() const;
    bool balanceIsSet() const;
    void unsetBalance();

    void setBalance(double value);

    /// <summary>
    /// 
    /// </summary>
    bool isAccountIsActivate() const;
    bool accountIsActivateIsSet() const;
    void unsetAccount_is_activate();

    void setAccountIsActivate(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Wallet> getMethodOfPayment() const;
    bool methodOfPaymentIsSet() const;
    void unsetMethod_of_payment();

    void setMethodOfPayment(const std::shared_ptr<Wallet>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getLoyaltyCredit() const;
    bool loyaltyCreditIsSet() const;
    void unsetLoyalty_credit();

    void setLoyaltyCredit(int32_t value);


protected:
    utility::string_t m_Account_number;
    bool m_Account_numberIsSet;
    double m_Balance;
    bool m_BalanceIsSet;
    bool m_Account_is_activate;
    bool m_Account_is_activateIsSet;
    std::shared_ptr<Wallet> m_Method_of_payment;
    bool m_Method_of_paymentIsSet;
    int32_t m_Loyalty_credit;
    bool m_Loyalty_creditIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetAccountResponse_H_ */
