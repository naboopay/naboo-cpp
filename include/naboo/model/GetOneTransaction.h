/**
 * NabooApi V1
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetOneTransaction.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetOneTransaction_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetOneTransaction_H_


#include "naboo/ModelBase.h"

#include "naboo/model/Wallet.h"
#include "naboo/model/TransactionStatusEnum.h"
#include "naboo/model/ProductModel.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ProductModel;


/// <summary>
/// 
/// </summary>
class  GetOneTransaction
    : public ModelBase
{
public:
    GetOneTransaction();
    virtual ~GetOneTransaction();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetOneTransaction members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOrderId() const;
    bool orderIdIsSet() const;
    void unsetOrder_id();

    void setOrderId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Wallet>>& getMethodOfPayment();
    bool methodOfPaymentIsSet() const;
    void unsetMethod_of_payment();

    void setMethodOfPayment(const std::vector<std::shared_ptr<Wallet>>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getAmountToPay() const;
    bool amountToPayIsSet() const;
    void unsetAmount_to_pay();

    void setAmountToPay(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();

    void setCurrency(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();

    void setCreatedAt(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TransactionStatusEnum> getTransactionStatus() const;
    bool transactionStatusIsSet() const;
    void unsetTransaction_status();

    void setTransactionStatus(const std::shared_ptr<TransactionStatusEnum>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ProductModel>>& getProducts();
    bool productsIsSet() const;
    void unsetProducts();

    void setProducts(const std::vector<std::shared_ptr<ProductModel>>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsDone() const;
    bool isDoneIsSet() const;
    void unsetIs_done();

    void setIsDone(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsEscrow() const;
    bool isEscrowIsSet() const;
    void unsetIs_escrow();

    void setIsEscrow(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsMerchant() const;
    bool isMerchantIsSet() const;
    void unsetIs_merchant();

    void setIsMerchant(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCheckoutUrl() const;
    bool checkoutUrlIsSet() const;
    void unsetCheckout_url();

    void setCheckoutUrl(const utility::string_t& value);


protected:
    utility::string_t m_Order_id;
    bool m_Order_idIsSet;
    std::vector<std::shared_ptr<Wallet>> m_Method_of_payment;
    bool m_Method_of_paymentIsSet;
    int32_t m_Amount;
    bool m_AmountIsSet;
    int32_t m_Amount_to_pay;
    bool m_Amount_to_payIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    utility::string_t m_Created_at;
    bool m_Created_atIsSet;
    std::shared_ptr<TransactionStatusEnum> m_Transaction_status;
    bool m_Transaction_statusIsSet;
    std::vector<std::shared_ptr<ProductModel>> m_Products;
    bool m_ProductsIsSet;
    bool m_Is_done;
    bool m_Is_doneIsSet;
    bool m_Is_escrow;
    bool m_Is_escrowIsSet;
    bool m_Is_merchant;
    bool m_Is_merchantIsSet;
    utility::string_t m_Checkout_url;
    bool m_Checkout_urlIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetOneTransaction_H_ */
