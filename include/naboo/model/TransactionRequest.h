/**
 * NabooApi V1
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TransactionRequest.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_TransactionRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_TransactionRequest_H_


#include "naboo/ModelBase.h"

#include "naboo/model/Wallet.h"
#include "naboo/model/ProductModel.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ProductModel;


/// <summary>
/// 
/// </summary>
class  TransactionRequest
    : public ModelBase
{
public:
    TransactionRequest();
    virtual ~TransactionRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TransactionRequest members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Wallet>>& getMethodOfPayment();
    bool methodOfPaymentIsSet() const;
    void unsetMethod_of_payment();

    void setMethodOfPayment(const std::vector<std::shared_ptr<Wallet>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ProductModel>>& getProducts();
    bool productsIsSet() const;
    void unsetProducts();

    void setProducts(const std::vector<std::shared_ptr<ProductModel>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSuccessUrl() const;
    bool successUrlIsSet() const;
    void unsetSuccess_url();

    void setSuccessUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getErrorUrl() const;
    bool errorUrlIsSet() const;
    void unsetError_url();

    void setErrorUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsEscrow() const;
    bool isEscrowIsSet() const;
    void unsetIs_escrow();

    void setIsEscrow(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsMerchant() const;
    bool isMerchantIsSet() const;
    void unsetIs_merchant();

    void setIsMerchant(bool value);


protected:
    std::vector<std::shared_ptr<Wallet>> m_Method_of_payment;
    bool m_Method_of_paymentIsSet;
    std::vector<std::shared_ptr<ProductModel>> m_Products;
    bool m_ProductsIsSet;
    utility::string_t m_Success_url;
    bool m_Success_urlIsSet;
    utility::string_t m_Error_url;
    bool m_Error_urlIsSet;
    bool m_Is_escrow;
    bool m_Is_escrowIsSet;
    bool m_Is_merchant;
    bool m_Is_merchantIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_TransactionRequest_H_ */
