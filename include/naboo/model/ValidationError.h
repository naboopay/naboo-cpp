/**
 * NabooApi V1
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ValidationError.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ValidationError_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ValidationError_H_


#include "naboo/ModelBase.h"

#include "naboo/model/ValidationError_loc_inner.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  ValidationError
    : public ModelBase
{
public:
    ValidationError();
    virtual ~ValidationError();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ValidationError members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ValidationError_loc_inner>>& getLoc();
    bool locIsSet() const;
    void unsetLoc();

    void setLoc(const std::vector<std::shared_ptr<ValidationError_loc_inner>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMsg() const;
    bool msgIsSet() const;
    void unsetMsg();

    void setMsg(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);


protected:
    std::vector<std::shared_ptr<ValidationError_loc_inner>> m_Loc;
    bool m_LocIsSet;
    utility::string_t m_Msg;
    bool m_MsgIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ValidationError_H_ */
